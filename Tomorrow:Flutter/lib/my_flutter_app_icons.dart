/// Flutter icons MyFlutterApp
/// Copyright (C) 2023 by original authors @ fluttericon.com, fontello.com
/// This font was generated by FlutterIcon.com, which is derived from Fontello.
///
/// To use this font, place it in your fonts/ directory and include the
/// following in your pubspec.yaml
///
/// flutter:
///   fonts:
///    - family:  MyFlutterApp
///      fonts:
///       - asset: fonts/MyFlutterApp.ttf
///
/// 
/// * Material Design Icons, Copyright (C) Google, Inc
///         Author:    Google
///         License:   Apache 2.0 (https://www.apache.org/licenses/LICENSE-2.0)
///         Homepage:  https://design.google.com/icons/
/// * Fontelico, Copyright (C) 2012 by Fontello project
///         Author:    Crowdsourced, for Fontello project
///         License:   SIL (http://scripts.sil.org/OFL)
///         Homepage:  http://fontello.com
/// * Font Awesome 4, Copyright (C) 2016 by Dave Gandy
///         Author:    Dave Gandy
///         License:   SIL ()
///         Homepage:  http://fortawesome.github.com/Font-Awesome/
/// * Linearicons Free, Copyright (C) Linearicons.com
///         Author:    Perxis
///         License:   CC BY-SA 4.0 (https://creativecommons.org/licenses/by-sa/4.0/)
///         Homepage:  https://linearicons.com
///
import 'package:flutter/widgets.dart';

class MyFlutterApp {
  MyFlutterApp._();

  static const _kFontFam = 'MyFlutterApp';
  static const String? _kFontPkg = null;

  static const IconData add_to_photos = IconData(0xe800, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData border_color = IconData(0xe801, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_forward = IconData(0xe802, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_back = IconData(0xe803, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_upward = IconData(0xe804, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData arrow_downward = IconData(0xe805, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData cached = IconData(0xe806, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData contact_mail = IconData(0xe807, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lock = IconData(0xe808, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData lock_open = IconData(0xe809, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData visibility_off = IconData(0xe80a, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData visibility = IconData(0xe80b, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_surprised = IconData(0xe80c, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_tongue = IconData(0xe80d, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_happy = IconData(0xe80e, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_wink = IconData(0xe80f, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_unhappy = IconData(0xe810, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_sleep = IconData(0xe811, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_thumbsup = IconData(0xe812, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_coffee = IconData(0xe813, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData emo_angry = IconData(0xe814, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pencil = IconData(0xe815, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData search = IconData(0xe816, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData pencil_1 = IconData(0xe817, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData paper_plane = IconData(0xf1d8, fontFamily: _kFontFam, fontPackage: _kFontPkg);
  static const IconData paper_plane_empty = IconData(0xf1d9, fontFamily: _kFontFam, fontPackage: _kFontPkg);
}
